name: publish-nx.yml
on:
  workflow_dispatch:
  push:
    tags:
      - v*.*.*
      - v*.*.*-*
permissions:
  actions: read
  contents: read
  id-token: write # needed for provenance data generation

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
          scope: 'telicent-oss'
          token: ${{ secrets.NPM_REGISTRY_TOKEN }}
      - run: yarn install --frozen-lockfile
      - run: npx nx run @telicent-oss/rdfservice:build
      - run: npx nx run @telicent-oss/ontologyservice:build
      - run: npx nx run @telicent-oss/catalogservice:build
      - run: |
          cd ./packages/RdfService
          local_version=$(node -p "require('./package.json').version")
          published_version=$(npm view $(node -p "require('./package.json').name") version || echo "0.0.0")
          if [ "$published_version" != "$local_version" ]; then
            npm publish --access public --provenance
          else
            echo "No changes in version. Skipping publish."
          fi
          cd -
      - run: |
          sleep 30 # let RDF publish perculate through
          cd ./packages/OntologyService
          local_version=$(node -p "require('./package.json').version")
          published_version=$(npm view $(node -p "require('./package.json').name") version || echo "0.0.0")
          if [ "$published_version" != "$local_version" ]; then
            npm publish --access public --provenance
          else
            echo "No changes in version. Skipping publish."
          fi
          cd -
      - run: |
          sleep 30 # let RDF publish perculate through
          cd ./packages/CatalogService
          local_version=$(node -p "require('./package.json').version")
          published_version=$(npm view $(node -p "require('./package.json').name") version || echo "0.0.0")
          if [ "$published_version" != "$local_version" ]; then
            npm publish --access public --provenance
          else
            echo "No changes in version. Skipping publish."
          fi
          cd -
        env:
          NPM_CONFIG_PROVENANCE: true
